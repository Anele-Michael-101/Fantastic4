#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WcfService5
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Database1")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertLECTURER(LECTURER instance);
    partial void UpdateLECTURER(LECTURER instance);
    partial void DeleteLECTURER(LECTURER instance);
    partial void InsertMODULE(MODULE instance);
    partial void UpdateMODULE(MODULE instance);
    partial void DeleteMODULE(MODULE instance);
    partial void InsertPOSTGRADUATE(POSTGRADUATE instance);
    partial void UpdatePOSTGRADUATE(POSTGRADUATE instance);
    partial void DeletePOSTGRADUATE(POSTGRADUATE instance);
    partial void InsertSTUDENT(STUDENT instance);
    partial void UpdateSTUDENT(STUDENT instance);
    partial void DeleteSTUDENT(STUDENT instance);
    partial void InsertUNDERGARDUATE(UNDERGARDUATE instance);
    partial void UpdateUNDERGARDUATE(UNDERGARDUATE instance);
    partial void DeleteUNDERGARDUATE(UNDERGARDUATE instance);
    partial void InsertREGISTERED(REGISTERED instance);
    partial void UpdateREGISTERED(REGISTERED instance);
    partial void DeleteREGISTERED(REGISTERED instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["Database1ConnectionString"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<LECTURER> LECTURERs
		{
			get
			{
				return this.GetTable<LECTURER>();
			}
		}
		
		public System.Data.Linq.Table<MODULE> MODULEs
		{
			get
			{
				return this.GetTable<MODULE>();
			}
		}
		
		public System.Data.Linq.Table<POSTGRADUATE> POSTGRADUATEs
		{
			get
			{
				return this.GetTable<POSTGRADUATE>();
			}
		}
		
		public System.Data.Linq.Table<STUDENT> STUDENTs
		{
			get
			{
				return this.GetTable<STUDENT>();
			}
		}
		
		public System.Data.Linq.Table<UNDERGARDUATE> UNDERGARDUATEs
		{
			get
			{
				return this.GetTable<UNDERGARDUATE>();
			}
		}
		
		public System.Data.Linq.Table<REGISTERED> REGISTEREDs
		{
			get
			{
				return this.GetTable<REGISTERED>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LECTURER")]
	public partial class LECTURER : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _lect_ID;
		
		private string _L_name;
		
		private string _L_title;
		
		private EntitySet<MODULE> _MODULEs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onlect_IDChanging(int value);
    partial void Onlect_IDChanged();
    partial void OnL_nameChanging(string value);
    partial void OnL_nameChanged();
    partial void OnL_titleChanging(string value);
    partial void OnL_titleChanged();
    #endregion
		
		public LECTURER()
		{
			this._MODULEs = new EntitySet<MODULE>(new Action<MODULE>(this.attach_MODULEs), new Action<MODULE>(this.detach_MODULEs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lect_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int lect_ID
		{
			get
			{
				return this._lect_ID;
			}
			set
			{
				if ((this._lect_ID != value))
				{
					this.Onlect_IDChanging(value);
					this.SendPropertyChanging();
					this._lect_ID = value;
					this.SendPropertyChanged("lect_ID");
					this.Onlect_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L_name", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string L_name
		{
			get
			{
				return this._L_name;
			}
			set
			{
				if ((this._L_name != value))
				{
					this.OnL_nameChanging(value);
					this.SendPropertyChanging();
					this._L_name = value;
					this.SendPropertyChanged("L_name");
					this.OnL_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_L_title", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string L_title
		{
			get
			{
				return this._L_title;
			}
			set
			{
				if ((this._L_title != value))
				{
					this.OnL_titleChanging(value);
					this.SendPropertyChanging();
					this._L_title = value;
					this.SendPropertyChanged("L_title");
					this.OnL_titleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LECTURER_MODULE", Storage="_MODULEs", ThisKey="lect_ID", OtherKey="lect_ID")]
		public EntitySet<MODULE> MODULEs
		{
			get
			{
				return this._MODULEs;
			}
			set
			{
				this._MODULEs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MODULEs(MODULE entity)
		{
			this.SendPropertyChanging();
			entity.LECTURER = this;
		}
		
		private void detach_MODULEs(MODULE entity)
		{
			this.SendPropertyChanging();
			entity.LECTURER = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MODULE")]
	public partial class MODULE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _mod_ID;
		
		private int _semester;
		
		private int _mod_credits;
		
		private int _lect_ID;
		
		private EntitySet<REGISTERED> _REGISTEREDs;
		
		private EntityRef<LECTURER> _LECTURER;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onmod_IDChanging(int value);
    partial void Onmod_IDChanged();
    partial void OnsemesterChanging(int value);
    partial void OnsemesterChanged();
    partial void Onmod_creditsChanging(int value);
    partial void Onmod_creditsChanged();
    partial void Onlect_IDChanging(int value);
    partial void Onlect_IDChanged();
    #endregion
		
		public MODULE()
		{
			this._REGISTEREDs = new EntitySet<REGISTERED>(new Action<REGISTERED>(this.attach_REGISTEREDs), new Action<REGISTERED>(this.detach_REGISTEREDs));
			this._LECTURER = default(EntityRef<LECTURER>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mod_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int mod_ID
		{
			get
			{
				return this._mod_ID;
			}
			set
			{
				if ((this._mod_ID != value))
				{
					this.Onmod_IDChanging(value);
					this.SendPropertyChanging();
					this._mod_ID = value;
					this.SendPropertyChanged("mod_ID");
					this.Onmod_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_semester", DbType="Int NOT NULL")]
		public int semester
		{
			get
			{
				return this._semester;
			}
			set
			{
				if ((this._semester != value))
				{
					this.OnsemesterChanging(value);
					this.SendPropertyChanging();
					this._semester = value;
					this.SendPropertyChanged("semester");
					this.OnsemesterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mod_credits", DbType="Int NOT NULL")]
		public int mod_credits
		{
			get
			{
				return this._mod_credits;
			}
			set
			{
				if ((this._mod_credits != value))
				{
					this.Onmod_creditsChanging(value);
					this.SendPropertyChanging();
					this._mod_credits = value;
					this.SendPropertyChanged("mod_credits");
					this.Onmod_creditsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lect_ID", DbType="Int NOT NULL")]
		public int lect_ID
		{
			get
			{
				return this._lect_ID;
			}
			set
			{
				if ((this._lect_ID != value))
				{
					if (this._LECTURER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onlect_IDChanging(value);
					this.SendPropertyChanging();
					this._lect_ID = value;
					this.SendPropertyChanged("lect_ID");
					this.Onlect_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MODULE_REGISTERED", Storage="_REGISTEREDs", ThisKey="mod_ID", OtherKey="mod_ID")]
		public EntitySet<REGISTERED> REGISTEREDs
		{
			get
			{
				return this._REGISTEREDs;
			}
			set
			{
				this._REGISTEREDs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LECTURER_MODULE", Storage="_LECTURER", ThisKey="lect_ID", OtherKey="lect_ID", IsForeignKey=true)]
		public LECTURER LECTURER
		{
			get
			{
				return this._LECTURER.Entity;
			}
			set
			{
				LECTURER previousValue = this._LECTURER.Entity;
				if (((previousValue != value) 
							|| (this._LECTURER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LECTURER.Entity = null;
						previousValue.MODULEs.Remove(this);
					}
					this._LECTURER.Entity = value;
					if ((value != null))
					{
						value.MODULEs.Add(this);
						this._lect_ID = value.lect_ID;
					}
					else
					{
						this._lect_ID = default(int);
					}
					this.SendPropertyChanged("LECTURER");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_REGISTEREDs(REGISTERED entity)
		{
			this.SendPropertyChanging();
			entity.MODULE = this;
		}
		
		private void detach_REGISTEREDs(REGISTERED entity)
		{
			this.SendPropertyChanging();
			entity.MODULE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.POSTGRADUATE")]
	public partial class POSTGRADUATE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _stud_number;
		
		private bool _full_time;
		
		private string _thesis_title;
		
		private EntityRef<STUDENT> _STUDENT;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onstud_numberChanging(int value);
    partial void Onstud_numberChanged();
    partial void Onfull_timeChanging(bool value);
    partial void Onfull_timeChanged();
    partial void Onthesis_titleChanging(string value);
    partial void Onthesis_titleChanged();
    #endregion
		
		public POSTGRADUATE()
		{
			this._STUDENT = default(EntityRef<STUDENT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stud_number", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int stud_number
		{
			get
			{
				return this._stud_number;
			}
			set
			{
				if ((this._stud_number != value))
				{
					if (this._STUDENT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onstud_numberChanging(value);
					this.SendPropertyChanging();
					this._stud_number = value;
					this.SendPropertyChanged("stud_number");
					this.Onstud_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_full_time", DbType="Bit NOT NULL")]
		public bool full_time
		{
			get
			{
				return this._full_time;
			}
			set
			{
				if ((this._full_time != value))
				{
					this.Onfull_timeChanging(value);
					this.SendPropertyChanging();
					this._full_time = value;
					this.SendPropertyChanged("full_time");
					this.Onfull_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_thesis_title", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string thesis_title
		{
			get
			{
				return this._thesis_title;
			}
			set
			{
				if ((this._thesis_title != value))
				{
					this.Onthesis_titleChanging(value);
					this.SendPropertyChanging();
					this._thesis_title = value;
					this.SendPropertyChanged("thesis_title");
					this.Onthesis_titleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="STUDENT_POSTGRADUATE", Storage="_STUDENT", ThisKey="stud_number", OtherKey="stud_number", IsForeignKey=true)]
		public STUDENT STUDENT
		{
			get
			{
				return this._STUDENT.Entity;
			}
			set
			{
				STUDENT previousValue = this._STUDENT.Entity;
				if (((previousValue != value) 
							|| (this._STUDENT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._STUDENT.Entity = null;
						previousValue.POSTGRADUATE = null;
					}
					this._STUDENT.Entity = value;
					if ((value != null))
					{
						value.POSTGRADUATE = this;
						this._stud_number = value.stud_number;
					}
					else
					{
						this._stud_number = default(int);
					}
					this.SendPropertyChanged("STUDENT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.STUDENT")]
	public partial class STUDENT : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _stud_number;
		
		private int _stud_contNo;
		
		private System.DateTime _date_of_birth;
		
		private EntityRef<POSTGRADUATE> _POSTGRADUATE;
		
		private EntityRef<UNDERGARDUATE> _UNDERGARDUATE;
		
		private EntitySet<REGISTERED> _REGISTEREDs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onstud_numberChanging(int value);
    partial void Onstud_numberChanged();
    partial void Onstud_contNoChanging(int value);
    partial void Onstud_contNoChanged();
    partial void Ondate_of_birthChanging(System.DateTime value);
    partial void Ondate_of_birthChanged();
    #endregion
		
		public STUDENT()
		{
			this._POSTGRADUATE = default(EntityRef<POSTGRADUATE>);
			this._UNDERGARDUATE = default(EntityRef<UNDERGARDUATE>);
			this._REGISTEREDs = new EntitySet<REGISTERED>(new Action<REGISTERED>(this.attach_REGISTEREDs), new Action<REGISTERED>(this.detach_REGISTEREDs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stud_number", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int stud_number
		{
			get
			{
				return this._stud_number;
			}
			set
			{
				if ((this._stud_number != value))
				{
					this.Onstud_numberChanging(value);
					this.SendPropertyChanging();
					this._stud_number = value;
					this.SendPropertyChanged("stud_number");
					this.Onstud_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stud_contNo", DbType="Int NOT NULL")]
		public int stud_contNo
		{
			get
			{
				return this._stud_contNo;
			}
			set
			{
				if ((this._stud_contNo != value))
				{
					this.Onstud_contNoChanging(value);
					this.SendPropertyChanging();
					this._stud_contNo = value;
					this.SendPropertyChanged("stud_contNo");
					this.Onstud_contNoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_date_of_birth", DbType="Date NOT NULL")]
		public System.DateTime date_of_birth
		{
			get
			{
				return this._date_of_birth;
			}
			set
			{
				if ((this._date_of_birth != value))
				{
					this.Ondate_of_birthChanging(value);
					this.SendPropertyChanging();
					this._date_of_birth = value;
					this.SendPropertyChanged("date_of_birth");
					this.Ondate_of_birthChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="STUDENT_POSTGRADUATE", Storage="_POSTGRADUATE", ThisKey="stud_number", OtherKey="stud_number", IsUnique=true, IsForeignKey=false)]
		public POSTGRADUATE POSTGRADUATE
		{
			get
			{
				return this._POSTGRADUATE.Entity;
			}
			set
			{
				POSTGRADUATE previousValue = this._POSTGRADUATE.Entity;
				if (((previousValue != value) 
							|| (this._POSTGRADUATE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._POSTGRADUATE.Entity = null;
						previousValue.STUDENT = null;
					}
					this._POSTGRADUATE.Entity = value;
					if ((value != null))
					{
						value.STUDENT = this;
					}
					this.SendPropertyChanged("POSTGRADUATE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="STUDENT_UNDERGARDUATE", Storage="_UNDERGARDUATE", ThisKey="stud_number", OtherKey="stud_number", IsUnique=true, IsForeignKey=false)]
		public UNDERGARDUATE UNDERGARDUATE
		{
			get
			{
				return this._UNDERGARDUATE.Entity;
			}
			set
			{
				UNDERGARDUATE previousValue = this._UNDERGARDUATE.Entity;
				if (((previousValue != value) 
							|| (this._UNDERGARDUATE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UNDERGARDUATE.Entity = null;
						previousValue.STUDENT = null;
					}
					this._UNDERGARDUATE.Entity = value;
					if ((value != null))
					{
						value.STUDENT = this;
					}
					this.SendPropertyChanged("UNDERGARDUATE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="STUDENT_REGISTERED", Storage="_REGISTEREDs", ThisKey="stud_number", OtherKey="stud_number")]
		public EntitySet<REGISTERED> REGISTEREDs
		{
			get
			{
				return this._REGISTEREDs;
			}
			set
			{
				this._REGISTEREDs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_REGISTEREDs(REGISTERED entity)
		{
			this.SendPropertyChanging();
			entity.STUDENT = this;
		}
		
		private void detach_REGISTEREDs(REGISTERED entity)
		{
			this.SendPropertyChanging();
			entity.STUDENT = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UNDERGARDUATE")]
	public partial class UNDERGARDUATE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _stud_number;
		
		private bool _extended_P;
		
		private int _year_study;
		
		private EntityRef<STUDENT> _STUDENT;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onstud_numberChanging(int value);
    partial void Onstud_numberChanged();
    partial void Onextended_PChanging(bool value);
    partial void Onextended_PChanged();
    partial void Onyear_studyChanging(int value);
    partial void Onyear_studyChanged();
    #endregion
		
		public UNDERGARDUATE()
		{
			this._STUDENT = default(EntityRef<STUDENT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stud_number", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int stud_number
		{
			get
			{
				return this._stud_number;
			}
			set
			{
				if ((this._stud_number != value))
				{
					if (this._STUDENT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onstud_numberChanging(value);
					this.SendPropertyChanging();
					this._stud_number = value;
					this.SendPropertyChanged("stud_number");
					this.Onstud_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_extended_P", DbType="Bit NOT NULL")]
		public bool extended_P
		{
			get
			{
				return this._extended_P;
			}
			set
			{
				if ((this._extended_P != value))
				{
					this.Onextended_PChanging(value);
					this.SendPropertyChanging();
					this._extended_P = value;
					this.SendPropertyChanged("extended_P");
					this.Onextended_PChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_year_study", DbType="Int NOT NULL")]
		public int year_study
		{
			get
			{
				return this._year_study;
			}
			set
			{
				if ((this._year_study != value))
				{
					this.Onyear_studyChanging(value);
					this.SendPropertyChanging();
					this._year_study = value;
					this.SendPropertyChanged("year_study");
					this.Onyear_studyChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="STUDENT_UNDERGARDUATE", Storage="_STUDENT", ThisKey="stud_number", OtherKey="stud_number", IsForeignKey=true)]
		public STUDENT STUDENT
		{
			get
			{
				return this._STUDENT.Entity;
			}
			set
			{
				STUDENT previousValue = this._STUDENT.Entity;
				if (((previousValue != value) 
							|| (this._STUDENT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._STUDENT.Entity = null;
						previousValue.UNDERGARDUATE = null;
					}
					this._STUDENT.Entity = value;
					if ((value != null))
					{
						value.UNDERGARDUATE = this;
						this._stud_number = value.stud_number;
					}
					else
					{
						this._stud_number = default(int);
					}
					this.SendPropertyChanged("STUDENT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.REGISTERED")]
	public partial class REGISTERED : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _stud_number;
		
		private int _mod_ID;
		
		private int _marks;
		
		private EntityRef<MODULE> _MODULE;
		
		private EntityRef<STUDENT> _STUDENT;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onstud_numberChanging(int value);
    partial void Onstud_numberChanged();
    partial void Onmod_IDChanging(int value);
    partial void Onmod_IDChanged();
    partial void OnmarksChanging(int value);
    partial void OnmarksChanged();
    #endregion
		
		public REGISTERED()
		{
			this._MODULE = default(EntityRef<MODULE>);
			this._STUDENT = default(EntityRef<STUDENT>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stud_number", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int stud_number
		{
			get
			{
				return this._stud_number;
			}
			set
			{
				if ((this._stud_number != value))
				{
					if (this._STUDENT.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onstud_numberChanging(value);
					this.SendPropertyChanging();
					this._stud_number = value;
					this.SendPropertyChanged("stud_number");
					this.Onstud_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mod_ID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int mod_ID
		{
			get
			{
				return this._mod_ID;
			}
			set
			{
				if ((this._mod_ID != value))
				{
					if (this._MODULE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onmod_IDChanging(value);
					this.SendPropertyChanging();
					this._mod_ID = value;
					this.SendPropertyChanged("mod_ID");
					this.Onmod_IDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_marks", DbType="Int NOT NULL")]
		public int marks
		{
			get
			{
				return this._marks;
			}
			set
			{
				if ((this._marks != value))
				{
					this.OnmarksChanging(value);
					this.SendPropertyChanging();
					this._marks = value;
					this.SendPropertyChanged("marks");
					this.OnmarksChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MODULE_REGISTERED", Storage="_MODULE", ThisKey="mod_ID", OtherKey="mod_ID", IsForeignKey=true)]
		public MODULE MODULE
		{
			get
			{
				return this._MODULE.Entity;
			}
			set
			{
				MODULE previousValue = this._MODULE.Entity;
				if (((previousValue != value) 
							|| (this._MODULE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MODULE.Entity = null;
						previousValue.REGISTEREDs.Remove(this);
					}
					this._MODULE.Entity = value;
					if ((value != null))
					{
						value.REGISTEREDs.Add(this);
						this._mod_ID = value.mod_ID;
					}
					else
					{
						this._mod_ID = default(int);
					}
					this.SendPropertyChanged("MODULE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="STUDENT_REGISTERED", Storage="_STUDENT", ThisKey="stud_number", OtherKey="stud_number", IsForeignKey=true)]
		public STUDENT STUDENT
		{
			get
			{
				return this._STUDENT.Entity;
			}
			set
			{
				STUDENT previousValue = this._STUDENT.Entity;
				if (((previousValue != value) 
							|| (this._STUDENT.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._STUDENT.Entity = null;
						previousValue.REGISTEREDs.Remove(this);
					}
					this._STUDENT.Entity = value;
					if ((value != null))
					{
						value.REGISTEREDs.Add(this);
						this._stud_number = value.stud_number;
					}
					else
					{
						this._stud_number = default(int);
					}
					this.SendPropertyChanged("STUDENT");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
